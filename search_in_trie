#include <iostream>
#include<bits/stdc++.h>
using namespace std;

class TrieNode{
  public:
  int val;
  TrieNode * children[26];
  bool isTerminal;

  TrieNode(int val){
    this->val = val;
    for(int i=0;i<26;i++){
      children[i] = NULL;
    }
    this->isTerminal = true;
  }
  

};
void insert(TrieNode * root , string word){
  // cout<<"word is :"<<word<<endl;
  if(word.length()==0){
    root->isTerminal = true;
    return;
  }

  char ch = word[0];
  int index = ch - 'a';
  TrieNode * child;
  if(root->children[index]!=NULL){
    //element is present 
    child = root->children[index];
  }
  else{
    //element is absent
    child = new TrieNode(ch);
    root->children[index] = child;

  }

  insert(root,word.substr(1));

}
bool searchWord(TrieNode * root , string word){
  if(word.length()==0){
    return root->isTerminal;
  }

  char ch = word[0];
  int index = ch - 'a';
  TrieNode * child;
  if(root->children[index]!=NULL){
       child = root -> children[index];
  }
  else{
    return false;
  }
  bool answer = searchWord(child,word.substr(1));
  return answer;

}
int main() {
  TrieNode * root = new TrieNode('_');
  string word = "love";
  insert(root,word);
  insert(root,"cater");
  insert(root,"care");
  insert(root,"cdm");
  insert(root,"lover");
  insert(root,"load");
  insert(root,"bat");
  insert(root,"car");
  insert(root,"cat");

  if(searchWord(root,"loved")){
    cout<<"found"<<endl;
  }
  else{
    cout<<"not found"<<endl;
  }
}
